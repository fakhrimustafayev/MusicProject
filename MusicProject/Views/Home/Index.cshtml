@* @model IEnumerable<MusicProject.Models.Release> *@

@model MusicProject.ViewModels.IndexViewModel

@{
   //var topTracks = ViewBag.TopTracks;
    ViewData["Title"] = "Home Page";
}

<main class="main-content">
    @await Html.PartialAsync("/Views/Partials/NavbarPartial.cshtml")
    <div class="content-inner container-fluid pb-0" id="page_layout">
        <div class="row mb-5">
@*             @await Html.PartialAsync("/Views/Partials/AsidePartial.cshtml") *@
            <div class="col-lg-12">
                <div class="card-header">
                    <div class="header-title">
                        <h4 class="card-title text-capitalize mb-3">Top Playlists</h4>
                    </div>
                </div>
            </div>
            <style>
                th, td {
                    text-align: right;
                }
            </style>

            <div class="row">
                @foreach (var sectionItem in Model.HomeResponse.data.home.sectionContainer.sections.items)
                {
                    for (int i = 1; i < sectionItem.sectionItems.items.Length; i++) // Start from index 1
                    {
                        var playlistItem = sectionItem.sectionItems.items[i];
                        <div class="col-xl-3 col-md-6 mb-3">
                            <div class="bg-soft-info position-relative rounded-3 card-box mb-3">
                                <a href="@Url.Action("Details", "Playlists", new { playlistId = playlistItem.uri.Substring("spotify:playlist:".Length) })">
                                    <!-- Updated anchor tag with substring -->
                                    <!-- Updated anchor tag -->
                                    <!-- Add hyperlink to playlist -->
                                    @if (playlistItem.content.data.images?.items != null && playlistItem.content.data.images.items.Any())
                                    {
                                        var imageUrl = playlistItem.content.data.images.items.FirstOrDefault()?.sources.FirstOrDefault()?.url;
                                        if (!string.IsNullOrEmpty(imageUrl))
                                        {
                                            <img src="@imageUrl" alt="Playlist Image" style="max-width: 285px; max-height: 285px;" />
                                        }
                                        else
                                        {
                                            <p>No image available</p>
                                        }
                                    }
                                    <div class="d-flex align-items-center play-list-icon">
                                    </div>
                                    <h6 class="fw-bold text-capitalize">@playlistItem.content.data.name</h6>
                                    <small class="fw-normal line-count-1 text-capitalize">@playlistItem.content.data.description</small>
                                </a>
                            </div>
                        </div>
                    }
                }
            </div>

        </div>
    </div>
    <div class="col-lg-12">
        <div class="card-header mb-3">
            <div class="header-title d-flex justify-content-between align-items-center">
                <h4 class="card-title text-capitalize">TOP 50 Recommended songs</h4>
                <div class="common-album position-relative d-lg-block d-none">
                    <div class="swiper-button-prev" id="prev2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="19" viewBox="0 0 18 19" fill="none">
                            <path d="M15.75 9.5C15.75 9.64918 15.6908 9.79226 15.5853 9.89775C15.4798 10.0032 15.3367 10.0625 15.1875 10.0625H4.17025L8.27298 14.1645C8.32525 14.2168 8.3667 14.2788 8.39499 14.3471C8.42327 14.4154 8.43783 14.4886 8.43783 14.5625C8.43783 14.6364 8.42327 14.7096 8.39499 14.7779C8.3667 14.8462 8.32525 14.9082 8.27298 14.9605C8.22072 15.0127 8.15868 15.0542 8.09039 15.0825C8.02211 15.1108 7.94893 15.1253 7.87502 15.1253C7.80111 15.1253 7.72792 15.1108 7.65964 15.0825C7.59135 15.0542 7.52931 15.0127 7.47705 14.9605L2.41455 9.89797C2.36225 9.84573 2.32076 9.78369 2.29245 9.7154C2.26414 9.64712 2.24957 9.57392 2.24957 9.5C2.24957 9.42608 2.26414 9.35288 2.29245 9.2846C2.32076 9.21631 2.36225 9.15427 2.41455 9.10203L7.47705 4.03953C7.58259 3.93398 7.72575 3.87469 7.87502 3.87469C8.02428 3.87469 8.16744 3.93398 8.27298 4.03953C8.37853 4.14508 8.43783 4.28823 8.43783 4.4375C8.43783 4.58677 8.37853 4.72992 8.27298 4.83547L4.17025 8.9375H15.1875C15.3367 8.9375 15.4798 8.99676 15.5853 9.10225C15.6908 9.20774 15.75 9.35082 15.75 9.5Z"
                                  fill="#4A525F" />
                        </svg>
                    </div>
                    <div class="swiper-button-next" id="next2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="19" viewBox="0 0 18 19" fill="none">
                            <path d="M15.5855 9.89797L10.523 14.9605C10.4174 15.066 10.2743 15.1253 10.125 15.1253C9.97573 15.1253 9.83258 15.066 9.72703 14.9605C9.62148 14.8549 9.56219 14.7118 9.56219 14.5625C9.56219 14.4132 9.62148 14.2701 9.72703 14.1645L13.8298 10.0625H2.8125C2.66332 10.0625 2.52024 10.0032 2.41475 9.89775C2.30926 9.79226 2.25 9.64918 2.25 9.5C2.25 9.35082 2.30926 9.20774 2.41475 9.10225C2.52024 8.99676 2.66332 8.9375 2.8125 8.9375H13.8298L9.72703 4.83547C9.62148 4.72992 9.56219 4.58677 9.56219 4.4375C9.56219 4.28823 9.62148 4.14508 9.72703 4.03953C9.83258 3.93398 9.97573 3.87469 10.125 3.87469C10.2743 3.87469 10.4174 3.93398 10.523 4.03953L15.5855 9.10203C15.6378 9.15427 15.6793 9.21631 15.7076 9.2846C15.7359 9.35288 15.7504 9.42608 15.7504 9.5C15.7504 9.57392 15.7359 9.64712 15.7076 9.7154C15.6793 9.78369 15.6378 9.84573 15.5855 9.89797Z"
                                  fill="currentColor" />
                        </svg>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <div class="swiper-container overflow-hidden" data-swiper="songs-slider">
                <div class="swiper-wrapper p-0 list-unstyled mb-0" style="display: flex;">
                    @foreach (var track in Model.TrackRecommendationResponse.tracks)
                    {
                        <div class="swiper-slide mb-3 col-md-4" style="flex: 0 0 auto; width: 200px;">
                            <div class="card">
                                <img src="@track.album.images.FirstOrDefault()?.url" class="card-img-top" alt="@track.name" style="object-fit: cover; width: 210px; height: 200px;">
                                <div class="card-body" style="width: 200px; height: 200px;">
                                    <h5 class="card-title text-truncate" style="max-width: 100%;">@track.name</h5>
                                    <p class="card-text text-truncate" style="max-width: 100%;">@string.Join(", ", track.artists.Select(a => a.name))</p>
                                    <a href="@Url.Action("AddTrackToFavorites", "Account", new { id = track.id })" class="btn btn-primary toggle-favorite" data-track-id="@track.id" data-is-favorite="@track.IsFavorite">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                            <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                                        </svg>
                                    </a>

                                    <button class="btn btn-primary play-preview" data-preview-url="@track.preview_url">Play</button>
                                    <audio class="audio-preview" preload="none" src="@track.preview_url"></audio>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


    <script>
        // Wait for the document to be fully loaded
        document.addEventListener("DOMContentLoaded", function () {
            // Get all elements with the class "play-preview"
            const playButtons = document.querySelectorAll(".play-preview");
            const audioElements = document.querySelectorAll(".audio-preview");

            // Function to pause all other audio elements except the specified one
            function pauseOtherAudioElements(currentAudio) {
                audioElements.forEach(audio => {
                    if (audio !== currentAudio && !audio.paused) {
                        audio.pause(); // Pause the audio
                        const playButton = audio.parentElement.querySelector(".play-preview");
                        if (playButton) {
                            playButton.textContent = "Play"; // Change button text back to "Play"
                        }
                    }
                });
            }

            // Iterate over each play button
            playButtons.forEach(button => {
                // Add a click event listener to each button
                button.addEventListener("click", function (event) {
                    event.preventDefault(); // Prevent default button behavior
                    const previewUrl = button.getAttribute("data-preview-url");
                    if (previewUrl) {
                        // Get the associated audio element
                        const audio = button.parentElement.querySelector(".audio-preview");
                        if (audio) {
                            // Pause all other audio elements except the current one
                            pauseOtherAudioElements(audio);
                            // Check if the audio is currently playing
                            if (audio.paused) {
                                audio.play(); // Play the audio
                                button.textContent = "Pause"; // Change button text to "Pause"
                            } else {
                                audio.pause(); // Pause the audio
                                button.textContent = "Play"; // Change button text back to "Play"
                            }
                        }
                    } else {
                        console.log("Preview URL not available.");
                    }
                });
            });
        });

    </script>




     <div class="row mb-5">
        <div class="col-lg-12">
            <div class="card-header mb-3">
                <div class="header-title">
                    <h4 class="card-title text-capitalize">Top 20 artists</h4>
                </div>
                <div class="common-album position-relative d-lg-block d-none">
                    <div class="swiper-button-prev" id="prev1">
                        <!-- Previous button SVG -->
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="19" viewBox="0 0 18 19" fill="none">
                            <path d="M15.75 9.5C15.75 9.64918 15.6908 9.79226 15.5853 9.89775C15.4798 10.0032 15.3367 10.0625 15.1875 10.0625H4.17025L8.27298 14.1645C8.32525 14.2168 8.3667 14.2788 8.39499 14.3471C8.42327 14.4154 8.43783 14.4886 8.43783 14.5625C8.43783 14.6364 8.42327 14.7096 8.39499 14.7779C8.3667 14.8462 8.32525 14.9082 8.27298 14.9605C8.22072 15.0127 8.15868 15.0542 8.09039 15.0825C8.02211 15.1108 7.94893 15.1253 7.87502 15.1253C7.80111 15.1253 7.72792 15.1108 7.65964 15.0825C7.59135 15.0542 7.52931 15.0127 7.47705 14.9605L2.41455 9.89797C2.36225 9.84573 2.32076 9.78369 2.29245 9.7154C2.26414 9.64712 2.24957 9.57392 2.24957 9.5C2.24957 9.42608 2.26414 9.35288 2.29245 9.2846C2.32076 9.21631 2.36225 9.15427 2.41455 9.10203L7.47705 4.03953C7.58259 3.93398 7.72575 3.87469 7.87502 3.87469C8.02428 3.87469 8.16744 3.93398 8.27298 4.03953C8.37853 4.14508 8.43783 4.28823 8.43783 4.4375C8.43783 4.58677 8.37853 4.72992 8.27298 4.83547L4.17025 8.9375H15.1875C15.3367 8.9375 15.4798 8.99676 15.5853 9.10225C15.6908 9.20774 15.75 9.35082 15.75 9.5Z"
                                  fill="#4A525F" />
                        </svg>
                    </div>
                    <div class="swiper-button-next" id="next1">
                        <!-- Next button SVG -->
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="19" viewBox="0 0 18 19" fill="none">
                            <path d="M15.5855 9.89797L10.523 14.9605C10.4174 15.066 10.2743 15.1253 10.125 15.1253C9.97573 15.1253 9.83258 15.066 9.72703 14.9605C9.62148 14.8549 9.56219 14.7118 9.56219 14.5625C9.56219 14.4132 9.62148 14.2701 9.72703 14.1645L13.8298 10.0625H2.8125C2.66332 10.0625 2.52024 10.0032 2.41475 9.89775C2.30926 9.79226 2.25 9.64918 2.25 9.5C2.25 9.35082 2.30926 9.20774 2.41475 9.10225C2.52024 8.99676 2.66332 8.9375 2.8125 8.9375H13.8298L9.72703 4.83547C9.62148 4.72992 9.56219 4.58677 9.56219 4.4375C9.56219 4.28823 9.62148 4.14508 9.72703 4.03953C9.83258 3.93398 9.97573 3.87469 10.125 3.87469C10.2743 3.87469 10.4174 3.93398 10.523 4.03953L15.5855 9.10203C15.6378 9.15427 15.6793 9.21631 15.7076 9.2846C15.7359 9.35288 15.7504 9.42608 15.7504 9.5C15.7504 9.57392 15.7359 9.64712 15.7076 9.7154C15.6793 9.78369 15.6378 9.84573 15.5855 9.89797Z"
                                  fill="currentColor" />
                        </svg>
                    </div>
                </div>
            </div>
        </div>
        <div class="swiper-container overflow-hidden" data-swiper="artists-slider">
            <div class="swiper-wrapper p-0 list-unstyled mb-0">
                @if (Model != null && Model.SpotifyArtistResponse.artists != null && Model.SpotifyArtistResponse.artists.Any())
                {
                    foreach (var artist in Model.SpotifyArtistResponse.artists)
                    {
                        <div class="swiper-slide">
                            <div class="col-md-6 mb-4">
                                <div class="card" style="width: 400px;">
                                    <a href="@Url.Action("Index", "Artists", new { id = artist.id })">
                                        <img src="@artist.images.FirstOrDefault()?.url" class="card-img-top" alt="@artist.name" style="object-fit: cover; width: 200px; height: 200px;">
                                    </a>
                                    <div class="card-body" style="width: 200px; height: 150px;">
                                        <h5 class="card-title text-truncate">@artist.name</h5>
                                        @{
                                            decimal followersCount = artist.followers?.total ?? 0;
                                            string followersDisplay = $"{followersCount / 1000000M:0}M";
                                        }
                                        <p class="card-text text-muted mb-1">Followers: @followersDisplay</p>
                                        <p class="card-text text-muted mb-1">Popularity: @artist.popularity</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="swiper-slide">
                        <p>No artist data available.</p>
                    </div>
                }
            <!-- Add pagination bullets here if needed -->
        </div>
    </div>

        @section Scripts {
            <!-- Include Swiper JS and initialize Swiper -->
            <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
            <script>
                var songsSwiper = new Swiper('[data-swiper="songs-slider"]', {
                    slidesPerView: 'auto',
                    spaceBetween: 30,
                    navigation: {
                        nextEl: '#next2',
                        prevEl: '#prev2',
                    },
                });

                var artistsSwiper = new Swiper('[data-swiper="artists-slider"]', {
                    slidesPerView: 'auto',
                    spaceBetween: 30,
                    navigation: {
                        nextEl: '#next1',
                        prevEl: '#prev1',
                    },
                });
            </script>
        }

      
  
    <div class="card border-top mb-0">
        <diiv class="card-body">
            <div class="d-flex align-items-center justify-content-between flex-md-row flex-column gap-3">
                <div class="">
                    
                    <small>Copyright <span id="copyright"> 
    <script>document.getElementById('copyright').appendChild(document.createTextNode(new Date().getFullYear()))</script>
    </span>. Made with love by Fakhri Mustafayev.</small>
                </div>
            </div>
        </diiv>
    </div></div>
            </div>
        </main>

