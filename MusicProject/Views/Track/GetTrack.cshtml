@model MusicProject.ViewModels.IndexViewModel

@{
    Layout = "";
}

<!doctype html>
<html lang="en" dir="ltr">
@await Html.PartialAsync("/Views/Partials/HeaderPartial.cshtml")
<body class="  ">
    <!-- loader Start -->
    <div id="loading">
        <div class="loader simple-loader">
            <div class="loader-body ">
                <img src="~/assets/images/loader.gif" alt="loader" class=" img-fluid ">
            </div>
        </div>
    </div>
    <!-- loader END -->
    @await Html.PartialAsync("/Views/Partials/AsidePartial.cshtml")
    <main class="main-content">
        @await Html.PartialAsync("/Views/Partials/Navbar2.cshtml")
        <div class="content-inner container-fluid pb-0" id="page_layout">
            <div class="row mb-4">
                <div class="col-lg-12">
                    <div class="card-header mb-3">
                        <div class="header-title">
                            <h4 class="card-title text-capitalize">Tracks</h4>
                        </div>
                    </div>
                </div>
            </div>
            @if (Model != null && Model.GetTrackResponse != null && Model.GetTrackResponse.tracks != null && Model.GetTrackResponse.tracks.Length > 0)
            {
                var track = Model.GetTrackResponse.tracks[0]; // Assuming you are passing only one track to the view
                <h4>@track.name</h4>
                <div class="d-flex align-items-center mb-3" style=" gap: 30px;">
                    @if (track.album != null && track.album.images != null && track.album.images.Length > 0)
                    {
                        <img src="@track.album.images[0].url" alt="Cover Art" class="img-thumbnail mr-3" style="max-width: 300px;" />
                    }
                    else
                    {
                        <div>No image available for this track.</div>
                    }
                    <div>
                        @* Play Button for Audio *@
                        @if (!string.IsNullOrEmpty(track.preview_url))
                        {
                            <button class="btn btn-primary play-preview" data-preview-url="@track.preview_url">Play</button>
                            <audio class="audio-preview" preload="none" src="@track.preview_url"></audio>
                        }
                        else
                        {
                            <div>No preview available for this track.</div>
                        }
                        <a href="@Url.Action("AddTrackToFavorites", "Account", new { id = track.id })" class="btn btn-primary toggle-favorite" data-track-id="@track.id">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                            </svg>
                        </a>
                    </div>
                    
                </div>
                <div>
                    Artist(s):
                    @foreach (var artist in track.artists)
                    {
                        @artist.name
                        if (!artist.Equals(track.artists.Last()))
                        {
                            <text>, </text>
                        }
                    }
                </div>
                <div>
                    Album: @track.album.name
                </div>
                
            }
            else
            {
                <div>No track found.</div>
            }
            <script>
                // Wait for the document to be fully loaded
                document.addEventListener("DOMContentLoaded", function () {
                    // Get all elements with the class "play-preview"
                    const playButtons = document.querySelectorAll(".play-preview");
                    const audioElements = document.querySelectorAll(".audio-preview");

                    // Function to pause all other audio elements except the specified one
                    function pauseOtherAudioElements(currentAudio) {
                        audioElements.forEach(audio => {
                            if (audio !== currentAudio && !audio.paused) {
                                audio.pause(); // Pause the audio
                                const playButton = audio.parentElement.querySelector(".play-preview");
                                if (playButton) {
                                    playButton.textContent = "Play"; // Change button text back to "Play"
                                }
                            }
                        });
                    }

                    // Iterate over each play button
                    playButtons.forEach(button => {
                        // Add a click event listener to each button
                        button.addEventListener("click", function (event) {
                            event.preventDefault(); // Prevent default button behavior
                            const previewUrl = button.getAttribute("data-preview-url");
                            if (previewUrl) {
                                // Get the associated audio element
                                const audio = button.parentElement.querySelector(".audio-preview");
                                if (audio) {
                                    // Pause all other audio elements except the current one
                                    pauseOtherAudioElements(audio);
                                    // Check if the audio is currently playing
                                    if (audio.paused) {
                                        audio.play(); // Play the audio
                                        button.textContent = "Pause"; // Change button text to "Pause"
                                    } else {
                                        audio.pause(); // Pause the audio
                                        button.textContent = "Play"; // Change button text back to "Play"
                                    }
                                }
                            } else {
                                console.log("Preview URL not available.");
                            }
                        });
                    });
                });

            </script>
        </div>


        <div class="card border-top mb-0">
            <diiv class="card-body">
                <div class="d-flex align-items-center justify-content-between flex-md-row flex-column gap-3">
                    <div class="">

                        <small>
                            Copyright <span id="copyright">
                                <script>document.getElementById('copyright').appendChild(document.createTextNode(new Date().getFullYear()))</script>
                            </span>. Made with love by Fakhri Mustafayev.
                        </small>
                    </div>
                </div>
            </diiv>
        </div></div>
        </div>
        </div>
        </div>
    </main>
    <!--Footer Start-->
    <!-- Footer Section Start -->
    @* @await Html.PartialAsync("/Views/Partials/Footer.cshtml") *@
    <!-- Footer Section End -->        <!--Footer End-->
    <!--Burger Menu Start-->
    @await Html.PartialAsync("/Views/Partials/BurgerMenu.cshtml")
    <!--Burger Menu End-->
    <!-- Wrapper End-->
    @await Html.PartialAsync("/Views/Partials/Scripts.cshtml")

</body>
</html>