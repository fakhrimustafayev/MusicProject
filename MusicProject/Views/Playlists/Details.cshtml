@model MusicProject.ViewModels.IndexViewModel

@{
    ViewData["Title"] = "Details";
    Layout = "";
}

 
<!doctype html>
  @await Html.PartialAsync("/Views/Partials/HeaderPartial.cshtml")  
    <body class="  ">
        <!-- loader Start -->
        <div id="loading">
        <div class="loader simple-loader">
            <div class="loader-body ">
                <img src="~/assets/images/loader.gif" alt="loader" class=" img-fluid ">
            </div>
        </div>
        </div>
        <!-- loader END -->
       @await Html.PartialAsync("/Views/Partials/AsidePartial.cshtml")
           <main class="main-content">
        @await Html.PartialAsync("/Views/Partials/Navbar2.cshtml")
        <div class="content-inner container-fluid pb-0" id="page_layout">
<div class="row">
    <div class="col-lg-12">
            <div class="card">

    </div>
        <div class="col-lg-12">
            <div class="card">
               <div class="card-body px-0">
                  <div class=" table-responsive">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>Track Name</th>
                                                <th></th>
                                                <th>Album</th>
                                                <th>Artists</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var playlistTrack in Model.PlaylistTrack)
                                            {
                                                <tr>
                                                    <td><img width="80" height="80" style="border-radius: 40px" src="@playlistTrack.Track.Album.Images[0].Url" /></td>
                                                    <td>@playlistTrack.Track.Name</td>
                                                    <td>
                                                        @if (!string.IsNullOrEmpty(playlistTrack.Track.Preview_Url))
                                                        {
                                                            <button class="btn btn-primary play-preview" data-preview-url="@playlistTrack.Track.Preview_Url">Play</button>
                                                            <audio class="audio-preview" preload="none" src="@playlistTrack.Track.Preview_Url"></audio>
                                                        }
                                                        else
                                                        {
                                                            <span>No preview available</span>
                                                        }
                                                    </td>
                                                    <td>@playlistTrack.Track.Album.Name</td>
                                                    <td>
                                                        @foreach (var artist in playlistTrack.Track.Artists)
                                                        {
                                                            <span>@artist.Name</span>
                                                            <br />
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>

                                    <div class="audio-slider" style="display: none;">
                                        <audio id="audio-player" controls>
                                            <source id="audio-source" type="audio/mpeg">
                                            Your browser does not support the audio element.
                                        </audio>
                                    </div>

                                    <script>
                                        // Wait for the document to be fully loaded
                                        document.addEventListener("DOMContentLoaded", function () {
                                            // Get all elements with the class "play-preview"
                                            const playButtons = document.querySelectorAll(".play-preview");
                                            const audioElements = document.querySelectorAll(".audio-preview");

                                            // Function to pause all other audio elements except the specified one
                                            function pauseOtherAudioElements(currentAudio) {
                                                audioElements.forEach(audio => {
                                                    if (audio !== currentAudio && !audio.paused) {
                                                        audio.pause(); // Pause the audio
                                                        const playButton = audio.parentElement.querySelector(".play-preview");
                                                        if (playButton) {
                                                            playButton.textContent = "Play"; // Change button text back to "Play"
                                                        }
                                                    }
                                                });
                                            }

                                            // Iterate over each play button
                                            playButtons.forEach(button => {
                                                // Add a click event listener to each button
                                                button.addEventListener("click", function (event) {
                                                    event.preventDefault(); // Prevent default button behavior
                                                    const previewUrl = button.getAttribute("data-preview-url");
                                                    if (previewUrl) {
                                                        // Get the associated audio element
                                                        const audio = button.parentElement.querySelector(".audio-preview");
                                                        if (audio) {
                                                            // Pause all other audio elements except the current one
                                                            pauseOtherAudioElements(audio);
                                                            // Check if the audio is currently playing
                                                            if (audio.paused) {
                                                                audio.play(); // Play the audio
                                                                button.textContent = "Pause"; // Change button text to "Pause"
                                                            } else {
                                                                audio.pause(); // Pause the audio
                                                                button.textContent = "Play"; // Change button text back to "Play"
                                                            }
                                                        }
                                                    } else {
                                                        console.log("Preview URL not available.");
                                                    }
                                                });
                                            });
                                        });
                                    </script>

                </div>
               </div>
            </div>
         </div>
         </div>


                <div class="card border-top mb-0">
                    <diiv class="card-body">
                        <div class="d-flex align-items-center justify-content-between flex-md-row flex-column gap-3">
                            <div class="">

                                <small>
                                    Copyright <span id="copyright">
                                        <script>document.getElementById('copyright').appendChild(document.createTextNode(new Date().getFullYear()))</script>
                                    </span>. Made with love by Fakhri Mustafayev.
                                </small>
                            </div>
                        </div>
                    </diiv>
                </div>
            </div>
        </div></div>
            </div>
        </main>
        <!--Footer Start-->
        <!-- Footer Section Start -->
        <!-- Footer Section End -->        <!--Footer End-->

        <!--Burger Menu Start-->
        @await Html.PartialAsync("/Views/Partials/BurgerMenu.cshtml")   
        <!--Burger Menu End-->

          <!-- Wrapper End-->
      @await Html.PartialAsync("/Views/Partials/Scripts.cshtml")
    </body>
</html>



